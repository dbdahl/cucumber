% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slice_samplers.R
\name{slice_transform}
\alias{slice_transform}
\title{Transform Slice Sampler}
\usage{
slice_transform(x, target, pseudo_log_pdf, pseudo_inv_cdf)
}
\arguments{
\item{x}{The current state (as a numeric scalar).}

\item{target}{A function taking numeric scalar that evaluates the log-target
density, returning a numeric scalar.}

\item{pseudo_log_pdf}{Not yet documented.}

\item{pseudo_inv_cdf}{Not yet documented.}
}
\value{
A list containing three elements: "x" is the new state, "u" is the
value of the CDF of the psuedo-target associated with the returned value,
inverse CDF method, and "nEvaluations is the number of evaluations of the
target function used to obtain the new state.
}
\description{
Quantile slice sampler.
}
\examples{
lf <- function(x) dbeta(x, 3, 4, log = TRUE)
pseudoLogPDF <- function(x) dbeta(x, shape1 = 1, shape2 = 1, log = TRUE)
pseudoInvCDF <- function(u) qbeta(u, shape1 = 1, shape2 = 1)
draws <- numeric(1000)
nEvaluations <- 0L
for (i in seq.int(2, length(draws))) {
  out <- slice_transform(draws[i - 1], target = lf, pseudoLogPDF, pseudoInvCDF)
  draws[i] <- out$x
  nEvaluations <- nEvaluations + out$nEvaluations
}
nEvaluations / length(draws)
nEvaluations / ess(draws)
plot(density(draws), xlim = c(0, 1))
curve(exp(lf(x)), 0, 1, col = "blue", add = TRUE)

}
