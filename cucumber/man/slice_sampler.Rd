% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slice_sampler.R
\name{slice_sampler}
\alias{slice_sampler}
\title{Slice Sampler using the Stepping Out and Shrinkage Procedures}
\usage{
slice_sampler(x, target, w, max = 0, log = FALSE)
}
\arguments{
\item{x}{The current state (as a numeric scalar).}

\item{target}{A function taking numeric scalar and returning a numeric
scalar.}

\item{w}{A numeric scalar tuning the algorithm which gives the typical slice
width. This is a main tuning parameter of the algorithm.}

\item{max}{The maximum number of times to step out. Setting \code{max} to
zero avoids some evaluations of \code{target}, but may lead to relatively
high autocorrelation if \code{w} is too small.  If \code{w} is too small,
setting \code{max} to a large value (even \code{Inf}) should lead to low
autocorrelation at the cost of more evaluations for \code{target}.}

\item{log}{If \code{FALSE}, the \code{target} function is the density
function of target distribution.  If \code{TRUE}, the function is log of
the density.}
}
\value{
A list contains two elements: "x" is the new state and "nEvaluations"
is the number of evaluations of the target function used to obtain the new
state.
}
\description{
This function implements a univariate slice sampler of Neal (2003) using the
"stepping out" procedure, followed by the "shrinkage" procedure.
}
\examples{
f <- function(x) dbeta(x, 3, 4, log=TRUE)
draws <- numeric(1000)
nEvaluations <- 0L
system.time({
for ( i in seq_along(draws)[-1] ) {
    out <- slice_sampler(draws[i-1], f, w=0.7, max=Inf, log=TRUE)
    draws[i] <- out$x
    nEvaluations <- nEvaluations + out$nEvaluations
}
})
nEvaluations/length(draws)
plot(density(draws), xlim=c(0,1))
curve(exp(f(x)), 0, 1, col="blue", add=TRUE)

}
